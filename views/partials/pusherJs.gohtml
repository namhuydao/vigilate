{{define "pusherJs"}}
    <script>
        let pusher = new Pusher({{.PreferenceMap.pusherKey}}, {
            authEndPoint: "/pusher/auth",
            wsHost: "localhost",
            wsPort: 4001,
            forceTLS: false,
            enabledTransports: ["ws", "wss"],
            disabledTransports: []
        });

        let publicChannel = pusher.subscribe("public-channel")
        let privateChannel = pusher.subscribe("private-channel-{{.User.ID}}")
        console.log("private-channel-{{.User.ID}}")
        privateChannel.bind("private-message", function (data) {
            attention.alert({
                html: data.message,
                icon: "success",
            })
        })

        publicChannel.bind("app-starting", function (data) {
            successAlert(data.message);
            let toggle = document.getElementById("monitoring-live")
            toggle.checked = true
        })

        publicChannel.bind("app-stopping", function (data) {
            warningAlert(data.message);

            let toggle = document.getElementById("monitoring-live")
            toggle.checked = false

            let scheduleTableExists = !!document.getElementById("schedule-table")
            if (scheduleTableExists) {
                let scheduleTable = document.getElementById("schedule-table")
                let tbody = scheduleTable.querySelector("tbody");
                if (!tbody) {
                    tbody = document.createElement("tbody");
                    scheduleTable.appendChild(tbody);
                } else {
                    tbody.innerHTML = "";
                }

                let noChecksRow = document.createElement("tr");
                noChecksRow.innerHTML = "<td colspan='5'>No scheduled checks!</td>";
                tbody.appendChild(noChecksRow);
            }

        })

        publicChannel.bind("schedule-item-removed-event", function (data) {
            let scheduleTable = document.getElementById("schedule-table")
            let tableContent = scheduleTable.innerHTML
            if (tableContent.includes("No scheduled checks!")) {
                let rowCount = scheduleTable.rows.length;
                for (let i = rowCount - 1; i > 0; i--) {
                    scheduleTable.deleteRow(i);
                }
            }

            let rowExists = !!document.getElementById(`schedule-${data.host_service_id}`)
            if (rowExists) {
                let row = document.getElementById(`schedule-${data.host_service_id}`)
                row.parentNode.removeChild(row)

                if (scheduleTable.rows.length === 1) {
                    let tbody = scheduleTable.querySelector("tbody");
                    let newRow = document.createElement("tr");
                    newRow.innerHTML = `
                                    <tr>
                                        <td colspan="5">No scheduled checks!</td>
                                    </tr>
                    `
                    tbody.appendChild(newRow)
                }
            }
        })

        publicChannel.bind("schedule-changed-event", function (data) {
            let scheduleTableExists = !!document.getElementById("schedule-table")
            if (scheduleTableExists) {
                let scheduleTable = document.getElementById("schedule-table")
                let tableContent = scheduleTable.innerHTML
                if (tableContent.includes("No scheduled checks!")) {
                    let rowCount = scheduleTable.rows.length;
                    for (let i = rowCount - 1; i > 0; i--) {
                        scheduleTable.deleteRow(i);
                    }
                }
                let rowExists = !!document.getElementById(`schedule-${data.host_service_id}`)
                if (rowExists) {
                    let row = document.getElementById(`schedule-${data.host_service_id}`)
                    row.parentNode.removeChild(row)
                }

                let tbody = scheduleTable.querySelector("tbody");
                let newRow = document.createElement("tr");
                newRow.id = `schedule-${data.host_service_id}`
                newRow.className = "schedule-row"
                let date = "Pending..."
                if (data.next_run !== undefined) {
                    date = data.next_run
                }
                newRow.innerHTML = `
                            <td>${data.host}</td>
                            <td>${data.service}</td>
                            <td>${data.schedule}</td>
                            <td>${data.last_run}</td>
                            <td>${date}</td>
                    `
                tbody.appendChild(newRow)
            }

        })

        publicChannel.bind("host-service-status-changed", function (data) {
            attention.toast({
                msg: data.message,
                icon: "info",
                timer: 30000,
                showCloseButton: true
            })
            console.log(data)
            updateHostServiceRow(data)

        })

        function updateHostServiceRow(data) {
            let exists = !!document.getElementById(`host-service-${data.host_service_id}`)
            if (exists) {
                let row = document.getElementById(`host-service-${data.host_service_id}`)
                let parent = row.closest('table')
                row.parentNode.removeChild(row)
                if (data.total_new_status === "0") {
                    let tbody = parent.querySelector("tbody");
                    let newRow = document.createElement("tr");
                    newRow.innerHTML = `
                                    <tr>
                                        <td colspan="4">No services</td>
                                    </tr>
                    `
                    tbody.appendChild(newRow)
                }
            } else {
                let tableExists = !!document.getElementById(`${data.status}-table`)
                if (tableExists) {
                    let tableRef = document.getElementById(`${data.status}-table`)
                    let tableContent = tableRef.innerHTML;
                    if (tableContent.includes("No services")) {
                        let rowCount = tableRef.rows.length;
                        for (let i = rowCount - 1; i > 0; i--) {
                            tableRef.deleteRow(i);
                        }
                    }
                    let tbody = tableRef.querySelector("tbody");
                    let newRow = document.createElement("tr");
                    newRow.id = `host-service-${data.host_service_id}`

                    let lastCheckCell = 'Pending...'
                    if (data.status !== "pending") {
                        lastCheckCell = data.last_check
                    }
                    newRow.innerHTML = `
                       <td>
                           <span class="${data.icon}"></span>
                           ${data.service_name}
                           <span class="badge bg-secondary pointer"
                                onclick="checkNow(${data.host_service_id}, '${data.status}')">
                                Check Now
                           </span>
                           </td>
                       <td>${lastCheckCell}</td>
                       <td></td>
                `
                    tbody.appendChild(newRow)
                }
            }
        }


        publicChannel.bind("host-service-count-changed", function (data) {
            let healthyCountExists = !!document.getElementById("healthy_count")
            if (healthyCountExists) {
                document.getElementById("healthy_count").innerHTML = data.healthy_count
                document.getElementById("problem_count").innerHTML = data.problem_count
                document.getElementById("pending_count").innerHTML = data.pending_count
                document.getElementById("warning_count").innerHTML = data.warning_count
            }
        })
    </script>
{{end}}